diff --git a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageSource.java b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageSource.java
index d9dbd99..e45f8e3 100644
--- a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageSource.java
+++ b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageSource.java
@@ -11,7 +11,7 @@ import com.facebook.react.views.imagehelper.ImageSource;
 
 import javax.annotation.Nullable;
 
-public class FastImageSource extends ImageSource {
+public class FastImageSource {
     private static final String DATA_SCHEME = "data";
     private static final String LOCAL_RESOURCE_SCHEME = "res";
     private static final String ANDROID_RESOURCE_SCHEME = "android.resource";
@@ -19,6 +19,7 @@ public class FastImageSource extends ImageSource {
     private static final String LOCAL_FILE_SCHEME = "file";
     private final Headers mHeaders;
     private Uri mUri;
+    private final ImageSource imageSource; // Composition instead of inheritance
 
     public static boolean isBase64Uri(Uri uri) {
         return DATA_SCHEME.equals(uri.getScheme());
@@ -49,9 +50,9 @@ public class FastImageSource extends ImageSource {
     }
 
     public FastImageSource(Context context, String source, double width, double height, @Nullable Headers headers) {
-        super(context, source, width, height);
+    imageSource = new ImageSource(context, source, width, height); // Create ImageSource instance
         mHeaders = headers == null ? Headers.DEFAULT : headers;
-        mUri = super.getUri();
+        mUri = imageSource.getUri();
 
         if (isResource() && TextUtils.isEmpty(mUri.toString())) {
             throw new Resources.NotFoundException("Local Resource Not Found. Resource: '" + getSource() + "'.");
@@ -97,7 +98,6 @@ public class FastImageSource extends ImageSource {
         return getGlideUrl();
     }
 
-    @Override
     public Uri getUri() {
         return mUri;
     }
@@ -109,4 +109,8 @@ public class FastImageSource extends ImageSource {
     public GlideUrl getGlideUrl() {
         return new GlideUrl(getUri().toString(), getHeaders());
     }
+
+    public String getSource() {
+        return imageSource.getSource(); // delegate to ImageSource
+    }
 }
